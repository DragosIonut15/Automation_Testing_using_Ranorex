///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Licenta_Nohai
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_data_to_departament_entity recording.
    /// </summary>
    [TestModule("cbb17fdf-9c8c-450c-918b-6dd6237fc64c", ModuleType.Recording, 1)]
    public partial class Add_data_to_departament_entity : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Licenta_NohaiRepository repository.
        /// </summary>
        public static Licenta_NohaiRepository repo = Licenta_NohaiRepository.Instance;

        static Add_data_to_departament_entity instance = new Add_data_to_departament_entity();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_data_to_departament_entity()
        {
            AddDepartament = "asd";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_data_to_departament_entity Instance
        {
            get { return instance; }
        }

#region Variables

        string _AddDepartament;

        /// <summary>
        /// Gets or sets the value of variable AddDepartament.
        /// </summary>
        [TestVariable("88df41a9-2fb7-4b17-a078-7d142ada2e1c")]
        public string AddDepartament
        {
            get { return _AddDepartament; }
            set { _AddDepartament = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.JhCreateEntity' at Center.", repo.ApplicationUnderTest.JhCreateEntityInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.JhCreateEntity.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldNumeDepartament' at Center.", repo.ApplicationUnderTest.FieldNumeDepartamentInfo, new RecordItemIndex(1));
            //repo.ApplicationUnderTest.FieldNumeDepartament.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AddDepartament' with focus on 'ApplicationUnderTest.FieldNumeDepartament'.", repo.ApplicationUnderTest.FieldNumeDepartamentInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.FieldNumeDepartament.PressKeys(AddDepartament);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Salvare' at Center.", repo.ApplicationUnderTest.SalvareInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Salvare.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.JhCreateEntity'", repo.ApplicationUnderTest.JhCreateEntityInfo, new ActionTimeout(5000), new RecordItemIndex(4));
            repo.ApplicationUnderTest.JhCreateEntityInfo.WaitForExists(5000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
