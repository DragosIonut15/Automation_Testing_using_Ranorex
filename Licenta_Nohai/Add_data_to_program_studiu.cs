///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Licenta_Nohai
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_data_to_program_studiu recording.
    /// </summary>
    [TestModule("f2550a60-d795-44c3-85aa-a7796ccc6404", ModuleType.Recording, 1)]
    public partial class Add_data_to_program_studiu : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Licenta_NohaiRepository repository.
        /// </summary>
        public static Licenta_NohaiRepository repo = Licenta_NohaiRepository.Instance;

        static Add_data_to_program_studiu instance = new Add_data_to_program_studiu();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_data_to_program_studiu()
        {
            Val_departament = "4: Object";
            Var_program = "asd";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_data_to_program_studiu Instance
        {
            get { return instance; }
        }

#region Variables

        string _Val_departament;

        /// <summary>
        /// Gets or sets the value of variable Val_departament.
        /// </summary>
        [TestVariable("4f7af899-b3cc-4664-b702-5aa1104176b7")]
        public string Val_departament
        {
            get { return _Val_departament; }
            set { _Val_departament = value; }
        }

        string _Var_program;

        /// <summary>
        /// Gets or sets the value of variable Var_program.
        /// </summary>
        [TestVariable("73b8b614-8652-4864-9ae1-cbe6ec8629dd")]
        public string Var_program
        {
            get { return _Var_program; }
            set { _Var_program = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CreareProgramStudiu' at Center.", repo.ApplicationUnderTest.CreareProgramStudiuInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.CreareProgramStudiu.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldProgram' at Center.", repo.ApplicationUnderTest.FieldProgramInfo, new RecordItemIndex(1));
            //repo.ApplicationUnderTest.FieldProgram.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Var_program' with focus on 'ApplicationUnderTest.FieldProgram'.", repo.ApplicationUnderTest.FieldProgramInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.FieldProgram.PressKeys(Var_program);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldDepartament' at Center.", repo.ApplicationUnderTest.FieldDepartamentInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.FieldDepartament.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Val_departament' with focus on 'ApplicationUnderTest.FieldDepartament'.", repo.ApplicationUnderTest.FieldDepartamentInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.FieldDepartament.PressKeys(Val_departament);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(5));
            Keyboard.Press("{Return}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Salvare' at Center.", repo.ApplicationUnderTest.SalvareInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Salvare.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
