///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Licenta_Nohai
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_data_to_cadru_didactic recording.
    /// </summary>
    [TestModule("b7a1a41a-d80a-4d4a-8585-2cacdbb3870a", ModuleType.Recording, 1)]
    public partial class Add_data_to_cadru_didactic : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Licenta_NohaiRepository repository.
        /// </summary>
        public static Licenta_NohaiRepository repo = Licenta_NohaiRepository.Instance;

        static Add_data_to_cadru_didactic instance = new Add_data_to_cadru_didactic();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_data_to_cadru_didactic()
        {
            NumeCadruDidactic = "asd";
            PrenumeCadruDidactic = "asd";
            TitluCadruDidactic = "asd";
            EmailCadruDidactic = "asd";
            BirouCadruDidactic = "411";
            DepartamentCadruDidactic = "conta";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_data_to_cadru_didactic Instance
        {
            get { return instance; }
        }

#region Variables

        string _NumeCadruDidactic;

        /// <summary>
        /// Gets or sets the value of variable NumeCadruDidactic.
        /// </summary>
        [TestVariable("25db086a-9be1-496c-9953-4d073550a29b")]
        public string NumeCadruDidactic
        {
            get { return _NumeCadruDidactic; }
            set { _NumeCadruDidactic = value; }
        }

        string _PrenumeCadruDidactic;

        /// <summary>
        /// Gets or sets the value of variable PrenumeCadruDidactic.
        /// </summary>
        [TestVariable("130cfc18-30a4-4208-9f34-b73cfb8a0443")]
        public string PrenumeCadruDidactic
        {
            get { return _PrenumeCadruDidactic; }
            set { _PrenumeCadruDidactic = value; }
        }

        string _TitluCadruDidactic;

        /// <summary>
        /// Gets or sets the value of variable TitluCadruDidactic.
        /// </summary>
        [TestVariable("2ce50c28-9445-4e0f-b05f-5db9ceb5468b")]
        public string TitluCadruDidactic
        {
            get { return _TitluCadruDidactic; }
            set { _TitluCadruDidactic = value; }
        }

        string _EmailCadruDidactic;

        /// <summary>
        /// Gets or sets the value of variable EmailCadruDidactic.
        /// </summary>
        [TestVariable("44d87868-9d24-406a-bdf8-d5f0105046ee")]
        public string EmailCadruDidactic
        {
            get { return _EmailCadruDidactic; }
            set { _EmailCadruDidactic = value; }
        }

        string _BirouCadruDidactic;

        /// <summary>
        /// Gets or sets the value of variable BirouCadruDidactic.
        /// </summary>
        [TestVariable("736f4af4-9deb-433b-89cf-1f351e5c7b62")]
        public string BirouCadruDidactic
        {
            get { return _BirouCadruDidactic; }
            set { _BirouCadruDidactic = value; }
        }

        string _DepartamentCadruDidactic;

        /// <summary>
        /// Gets or sets the value of variable DepartamentCadruDidactic.
        /// </summary>
        [TestVariable("9689ed99-f048-45cd-9cf7-b9f5a9a428d6")]
        public string DepartamentCadruDidactic
        {
            get { return _DepartamentCadruDidactic; }
            set { _DepartamentCadruDidactic = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CreareCadruDidactic' at Center.", repo.ApplicationUnderTest.CreareCadruDidacticInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.CreareCadruDidactic.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldNume' at Center.", repo.ApplicationUnderTest.FieldNumeInfo, new RecordItemIndex(1));
            //repo.ApplicationUnderTest.FieldNume.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumeCadruDidactic' with focus on 'ApplicationUnderTest.FieldNume'.", repo.ApplicationUnderTest.FieldNumeInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.FieldNume.PressKeys(NumeCadruDidactic);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldPrenume' at Center.", repo.ApplicationUnderTest.FieldPrenumeInfo, new RecordItemIndex(3));
            //repo.ApplicationUnderTest.FieldPrenume.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PrenumeCadruDidactic' with focus on 'ApplicationUnderTest.FieldPrenume'.", repo.ApplicationUnderTest.FieldPrenumeInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.FieldPrenume.PressKeys(PrenumeCadruDidactic);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldTitlu' at Center.", repo.ApplicationUnderTest.FieldTitluInfo, new RecordItemIndex(5));
            //repo.ApplicationUnderTest.FieldTitlu.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TitluCadruDidactic' with focus on 'ApplicationUnderTest.FieldTitlu'.", repo.ApplicationUnderTest.FieldTitluInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.FieldTitlu.PressKeys(TitluCadruDidactic);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldEmail' at Center.", repo.ApplicationUnderTest.FieldEmailInfo, new RecordItemIndex(7));
            //repo.ApplicationUnderTest.FieldEmail.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmailCadruDidactic' with focus on 'ApplicationUnderTest.FieldEmail'.", repo.ApplicationUnderTest.FieldEmailInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.FieldEmail.PressKeys(EmailCadruDidactic);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldBirou' at Center.", repo.ApplicationUnderTest.FieldBirouInfo, new RecordItemIndex(9));
            //repo.ApplicationUnderTest.FieldBirou.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$BirouCadruDidactic' with focus on 'ApplicationUnderTest.FieldBirou'.", repo.ApplicationUnderTest.FieldBirouInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.FieldBirou.PressKeys(BirouCadruDidactic);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FieldDepartament' at Center.", repo.ApplicationUnderTest.FieldDepartamentInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.FieldDepartament.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DepartamentCadruDidactic' with focus on 'ApplicationUnderTest.FieldDepartament'.", repo.ApplicationUnderTest.FieldDepartamentInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.FieldDepartament.PressKeys(DepartamentCadruDidactic);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.FieldDepartament'.", repo.ApplicationUnderTest.FieldDepartamentInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.FieldDepartament.PressKeys("{Return}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Salvare' at Center.", repo.ApplicationUnderTest.SalvareInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.Salvare.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
